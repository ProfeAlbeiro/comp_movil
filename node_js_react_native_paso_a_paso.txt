|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||-------------------------------------------------------------- NODE.JS Y REACT NATIVE --------------------------------------------------------------|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||                                                                                                                                                    |||
||| -- 01.  VISUAL STUDIO CODE Y EXTENSIONES                                                                                                           |||
||| -- 02.  BASE DE DATOS. MySQL                                                                                                                       |||
||| -- 03.  ESTRUCTURA DE CARPETAS Y ARCHIVOS DEL PROYECTO                                                                                             |||
||| -- 04.  BACKEND. Node.js, Server y API                                                                                                             |||
||| -- 05.  FRONTEND MÓVIL. React Native                                                                                                               |||
||| -- 06.  DESPLEGAR EL PROYECTO                                                                                                                      |||
|||                                                                                                                                                    |||
||| -- AUTOR:           ADAPTACIÓN hecha por ALBEIRO RAMOS. UNIMINUTO, 2025; del ORIGINAL elaborado por el Instructor MARCO LEÓN MORA. SENA, 2023.     |||                                                          |||
|||                                                                                                                                                    |||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||


|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||------------------------------------------------------- 01. VISUAL STUDIO CODE Y EXTENSIONES -------------------------------------------------------|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.01.  Instalar Visual Studio Code: ----------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Descargar 'Visual Studio Code': https://code.visualstudio.com/download.

            02. Instalar Visual Studio Code.

                    ⦿   En el asistente de instalación dejar marcado:   ☑ 'Agregar PATH…'.

            03. Abrir Visual Studio Code.


|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.02.  Instalar extensiones en Visual Studio Code: -------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Instalar las siguientes extensiones en Visual Studio Code:

                    ⦿   Material Icon Theme
                    ⦿   ES7 React/Redux/React-Native snippets
                    ⦿   Simple React Snippets
                    ⦿   Auto Close Tag
                    ⦿   Paste JSON as Code
                    ⦿   TypeScript importer

            02. Abrir una 'Terminal' en Visual Studio Code:

                    ⦿   'Terminal / New Terminal' ó 'Ctrl + Shift + ñ'
                    ⦿   Verificar que sea 'pwsh' o sino hay que cambiarla


|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||------------------------------------------------------------- 02.  BASE DE DATOS. MySQL ------------------------------------------------------------|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||


|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.01.  Instalar XAMPP: -----------------------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Descargar 'XAMPP': https://www.apachefriends.org/es/download.html.

            02. Instalar XAMPP.

            03. Abrir el 'XAMPP Control Panel' y ejecutar los servicios de 'Apache' y 'MySQL'.


|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.02.  Crear la base de datos 'MySql': -------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Abrir el navegador y escribir http://localhost/phpmyadmin/.
            
            02. Dar click en 'SQL' y escribir el siguiente código:
                    
                    01   CREATE SCHEMA nodejs_base1 DEFAULT CHARACTER SET utf8 ;
                    02   USE nodejs_base1;
                    03 
                    04   CREATE TABLE users (
                    05     id BIGINT NOT NULL AUTO_INCREMENT,
                    06     email VARCHAR(180) NOT NULL UNIQUE,
                    07     name VARCHAR(90) NOT NULL,
                    08     lastname VARCHAR(90) NOT NULL,
                    09     phone VARCHAR(90) NOT NULL UNIQUE,
                    10     image VARCHAR(255) NULL,
                    11     password VARCHAR(90) NOT NULL,
                    12     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    13     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                    14     PRIMARY KEY (id)
                    15   ) ENGINE=InnoDB;

            02. Dar click en 'Continuar'.
            

|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||------------------------------------------------ 03.  ESTRUCTURA DE CARPETAS Y ARCHIVOS DEL PROYECTO -----------------------------------------------|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 04.01.  Crear la estructura de carpetas y los archivos del proyecto: --------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

                                                                                                                                        # C = Carpetas
                                                                                                                                        # A = Archivos

                proyecto_nombre/                                            # C. Backend y Frontend de un proyecto móvil.
                ├── backend/                                                # C. Lógica del servidor Node.js para la gestión de datos y API.
                │   ├── config/                                             # C. Configuración del backend (base de datos, claves).
                │   │   ├── config.js                                       # A. Configuración principal del backend (variables de entorno, etc.).
                │   │   ├── keys.js                                         # A. Claves secretas para seguridad (JWT, servicios externos).
                │   │   └── passport.js                                     # A. Configuración para la autenticación de usuarios (login, registro).
                │   ├── controllers/                                        # C. Funciones para manejar las peticiones HTTP y la lógica.
                │   │   └── userController.js                               # A. Controlador para las operaciones relacionadas con los usuarios.
                │   ├── models/                                             # C. Estructura de datos que se utilizarán en la base de datos.
                │   │   └── user.js                                         # A. Esquema del modelo de usuario (campos en la base de datos).
    (NO CREAR)  │   ├── node_modules/                                       # C. Dependencias (librerías) instaladas para el backend.
                │   ├── routes/                                             # C. Endpoints (rutas) de la API del backend.
                │   │   └── userRoutes.js                                   # A. Define las rutas para las operaciones relacionadas con usuarios.
    (NO CREAR)  │   ├── package-lock.json                                   # A. Versiones exactas de las dependencias del backend.
    (NO CREAR)  │   ├── package.json                                        # A. Manifiesto del backend (nombre, dependencias, scripts, etcs).
                │   └── server.js                                           # A. Servidor node.js.
                └── frontend/                                               # C. Aplicación móvil de React Native.
                    ├── assets/                                             # C. Recursos estáticos (imágenes, fuentes).
    (NO CREAR)      ├── node_modules/                                       # C. Dependencias (librerías) instaladas para el frontend.
                    ├── src/                                                # C. Carpetas y archivos de la aplicación React Native.
                    │   ├── Data/                                           # C. Capa para obtención y manipulación de datos.
                    │   │   ├── repositories/                               # C. Interfaces para acceder a diferentes fuentes de datos.
                    │   │   │   ├── AuthRepository.tsx                      # A. Lógica para la autenticación.
                    │   │   │   └── UserLocalRepository.tsx                 # A. Gestión de datos del usuario a nivel local (AsyncStorage).
                    │   │   └── sources/                                    # C. Implementaciones concretas de las fuentes de datos (local, remota).
                    │   │       ├── local/                                  # C. Lógica para acceder a datos almacenados localmente.
                    │   │       │   └── LocalStorage.tsx                    # A. Interactua con el almacenamiento local (AsyncStorage).
                    │   │       └── remote/                                 # C. Interactua con la API del backend (clientes API).
                    │   │           ├── api/                                # C. Clientes o servicios para realizar llamadas a la API.
                    │   │           │   └── ApiDelivery.tsx                 # A. Cliente para interactuar con la API relacionada con "delivery".
                    │   │           └── models/                             # C. Estructuras de datos que se reciben de la API.
                    │   │               └── ResponseApiDelivery.tsx         # A. Tipo de la respuesta de la API de "delivery".
                    │   ├── Domain/                                         # C. Lógica de negocio y entidades del dominio (independiente).
                    │   │   ├── entities/                                   # C. Estructuras de los objetos del negocio (User).
                    │   │   │   └── User.tsx                                # A. Entidad de usuario con sus propiedades (nombre, email).
                    │   │   ├── repositories/                               # C. Interfaces para acceder a los datos (implementado en Data).
                    │   │   │   ├── AuthRepository.tsx                      # A. Interfaz para las operaciones de autenticación.
                    │   │   │   └── UserLocalRepository.tsx                 # A. Interfaz para la gestión de datos locales del usuario.
                    │   │   └── useCases/                                   # C. Lógica de negocio específica de la aplicación (dominio/data).
                    │   │       ├── auth/                                   # C. Casos de uso relacionados con la autenticación (Login, Register).
                    │   │       │   ├── LoginAuth.tsx                       # A. Lógica para el proceso de inicio de sesión del usuario.
                    │   │       │   └── RegisterAuth.tsx                    # A. Lógica para el proceso de registro de nuevos usuarios.
                    │   │       └── userLocal/                              # C. Casos de uso relacionados con la gestión local del usuario.
                    │   │           ├── GetUserLocal.tsx                    # A. Obtener información del usuario almacenado localmente.
                    │   │           ├── RemoveUserLocal.tsx                 # A. Eliminar información del usuario almacenado localmente.
                    │   │           └── SaveUserLocal.tsx                   # A. Guardar la información del usuario localmente.
                    │   └── Presentation/                                   # C. Capa de la interfaz y presentación de datos (components, views).
                    │       ├── components/                                 # C. Componentes de interfaz de usuario (inputs, buttons).
                    │       │   ├── CustomTextInput.tsx                     # A. Componente de entrada de texto personalizado con estilos.
                    │       │   └── RoundedButton.tsx                       # A. Componente de botón con estilos de bordes redondeados.
                    │       ├── hooks/                                      # C. Hooks personalizados para lógica de presentación reutilizable.
                    │       │   └── useUserLocal.tsx                        # A. Hook personalizado para manipular la información local del usuario.
                    │       ├── theme/                                      # C. Estilos y la temática visual general de la aplicación.
                    │       │   └── AppTheme.tsx                            # A. Paleta de colores, tipografía y estilos consistentes.
                    │       └── views/                                      # C. Pantallas o vistas principales de la aplicación.
                    │           ├── home/                                   # C. Archivos relacionados con la pantalla principal de la aplicación.
                    │           │   ├── Home.tsx                            # A. Componente principal de la pantalla inicio (Home).
                    │           │   ├── Styles.tsx                          # A. Estilos específicos para los componentes de la pantalla inicio.
                    │           │   └── ViewModel.tsx                       # A. Lógica de presentación para la pantalla inicio.
                    │           ├── profile/                                # C. Archivos relacionados con la pantalla de perfil del usuario.
                    │           │   └── info/                               # C. Archivos relacionados con la información del perfil del usuario.
                    │           │       ├── ProfileInfo.tsx                 # A. Componente para mostrar la información del perfil del usuario.
                    │           │       └── ViewModel.tsx                   # A. Lógica de presentación para la información del perfil del usuario.
                    │           └── register/                               # C. Archivos relacionados con la pantalla de registro de usuarios.
                    │               ├── Register.tsx                        # A. Componente principal de la pantalla de registro de usuarios.
                    │               ├── Styles.tsx                          # A. Estilos específicos para los componentes de la pantalla de registro.
                    │               └── ViewModel.tsx                       # A. Lógica de presentación para la pantalla de registro de usuarios.
    (NO CREAR)      ├── .gitignore                                          # A. Archivos y carpetas que Git debe ignorar (node_modules, etc.).
                    ├── app.json                                            # A. Configuración utilizada por Expo para configurar la app.
                    ├── App.tsx                                             # A. Raíz de la aplicación React Native (punto de entrada UI).
                    ├── index.ts                                            # A. Punto de entrada para la aplicación React Native (fuera de Expo).
    (NO CREAR)      ├── package-lock.json                                   # A. Registra las versiones exactas de las dependencias del frontend.
    (NO CREAR)      ├── package.json                                        # A. Manifiesto del proyecto frontend (nombre, dependencias, scripts).
                    └── tsconfig.json                                       # A. Configuración para el compilador de TypeScript.




|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||-------------------------------------------------------- 04.  BACKEND. Node.js, Server y API -------------------------------------------------------|||
|||----------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

                                                                                                                                        # C = Carpetas
                                                                                                                                        # A = Archivos

                proyecto_nombre/                                            # C. Backend y Frontend de un proyecto móvil.
                ├── backend/                                                # C. Lógica del servidor Node.js para la gestión de datos y API.
                │   ├── config/                                             # C. Configuración del backend (base de datos, claves).
                │   │   ├── config.js                                       # A. Configuración principal del backend (variables de entorno, etc.).
                │   │   ├── keys.js                                         # A. Claves secretas para seguridad (JWT, servicios externos).
                │   │   └── passport.js                                     # A. Configuración para la autenticación de usuarios (login, registro).
                │   ├── controllers/                                        # C. Funciones para manejar las peticiones HTTP y la lógica.
                │   │   └── userController.js                               # A. Controlador para las operaciones relacionadas con los usuarios.
                │   ├── models/                                             # C. Estructura de datos que se utilizarán en la base de datos.
                │   │   └── user.js                                         # A. Esquema del modelo de usuario (campos en la base de datos).
    (NO CREAR)  │   ├── node_modules/                                       # C. Dependencias (librerías) instaladas para el backend.
                │   ├── routes/                                             # C. Endpoints (rutas) de la API del backend.
                │   │   └── userRoutes.js                                   # A. Define las rutas para las operaciones relacionadas con usuarios.
    (NO CREAR)  │   ├── package-lock.json                                   # A. Versiones exactas de las dependencias del backend.
    (NO CREAR)  │   ├── package.json                                        # A. Manifiesto del backend (nombre, dependencias, scripts, etcs).
                │   └── server.js                                           # A. Servidor node.js.



|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 04.01.  Instalar node.js: ---------------------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Descargar 'node.js': https://nodejs.org/es/.

                    ⦿   Descargar la última version LTS

            02. Instalar node.js.


|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 04.02.  PowerShell. Directivas: ---------------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. En la terminal de 'Visual Studio Code', digitar el siguiente comando para ver las directivas de ejecución:

                    PS C:\..\..> Get-ExecutionPolicy
                    Restricted

            NOTA:   ⦿   Si aparece 'Restricted', hay que cambiarla a 'Unrestricted' de la siguiente forma:

                    PS C:\..\..> Set-ExecutionPolicy -Scope CurrentUser

                    cmdlet Set-ExecutionPolicy en la posición 1 de la canalización de comandos
                    Proporcione valores para los parámetros siguientes:
                    ExecutionPolicy: Unrestricted

            02. Verificar la versión de 'node' y 'npm':

                    PS C:\..\..> node --version
                    PS C:\..\..> npm --version


|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 04.03.  Configurar el 'backend/': -------------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Abrir una Terminal en 'Visual Studio Code' y digitar los siguientes comandos:

                    PS C:\..\> cd backend
                    PS C:\..\backend> npm init

                    This utility will walk you through creating a package.json file.
                    It only covers the most common items, and tries to guess sensible defaults.

                    See `npm help init` for definitive documentation on these fields
                    and exactly what they do.

                    Use `npm install <pkg>` afterwards to install a package and
                    save it as a dependency in the package.json file.

                    Press ^C at any time to quit.
                    package name: (backend) nodejs
                    version: (1.0.0)
                    description: Backend de la app móvil de react native
                    entry point: (index.js) server.js
                    test command:
                    git repository:
                    keywords: ReactNative NodeJs
                    author: Albeiro Ramos
                    license: (ISC) MIT
                    About to write to C:\Users\Instructor\Documents\_albe_\react_native\backend\package.json:

                    {
                      "name": "nodejs",
                      "version": "1.0.0",
                      "description": "Backend de la app de prueba 'my-app' de React Native",
                      "main": "server.js",
                      "scripts": {
                        "test": "echo \"Error: no test specified\" && exit 1"
                      },
                      "keywords": [
                        "ReactNative",
                        "NodeJs"
                      ],
                      "author": "Instructor Albeiro Ramos",
                      "license": "MIT"
                    }

                    Is this OK? (yes) yes

                    PS C:\..\backend> npm i express
                    PS C:\..\backend> npm i http
                    PS C:\..\backend> npm i cors
                    PS C:\..\backend> npm i morgan
                    PS C:\..\backend> npm i mysql
                    PS C:\..\backend> npm i bcryptjs
                    PS C:\..\backend> npm i passport
                    PS C:\..\backend> npm i passport-jwt
                    PS C:\..\backend> npm i jsonwebtoken